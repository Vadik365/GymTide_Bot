# handlers.py

from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
import db

router = Router()


# FSM –¥–ª—è –∞–Ω–∫–µ—Ç—ã
class Questionnaire(StatesGroup):
    name = State()
    age = State()
    weight = State()
    health_issues = State()
    goal = State()
    gym_visits = State()


# –°—Ç–∞—Ä—Ç –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ
@router.message(CommandStart(deep_link=True))
async def cmd_start_ref(message: Message, command: CommandStart, state: FSMContext):
    ref_id = command.args
    user_id = message.from_user.id
    new_user = await db.register_user(user_id, ref_id)

    if new_user:
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GymTide! üèãÔ∏è\n–¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ.")
    else:
        await message.answer("–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ GymTide ‚úÖ")

    link = f"https://t.me/{(await message.bot.me()).username}?start={user_id}"
    await message.answer(f"–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π –ø–æ —Å—Å—ã–ª–∫–µ:\n{link}\n\n–ü—Ä–∏–≥–ª–∞—Å–∏ 3 –¥—Ä—É–∑–µ–π ‚Äî –ø–æ–ª—É—á–∏ –º–µ—Å—è—Ü –±–µ—Å–ø–ª–∞—Ç–Ω–æ!")

    # –ó–∞–ø—É—Å–∫ –∞–Ω–∫–µ—Ç—ã
    await message.answer("–î–∞–≤–∞–π –∑–∞–ø–æ–ª–Ω–∏–º –∞–Ω–∫–µ—Ç—É. –í–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è:")
    await state.set_state(Questionnaire.name)


# –°—Ç–∞—Ä—Ç –±–µ–∑ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    user_id = message.from_user.id
    new_user = await db.register_user(user_id)

    if new_user:
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GymTide! üèãÔ∏è –¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")
    else:
        await message.answer("–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ GymTide ‚úÖ")

    link = f"https://t.me/{(await message.bot.me()).username}?start={user_id}"
    await message.answer(f"–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π –ø–æ —Å—Å—ã–ª–∫–µ:\n{link}\n\n–ü—Ä–∏–≥–ª–∞—Å–∏ 3 –¥—Ä—É–∑–µ–π ‚Äî –ø–æ–ª—É—á–∏ –º–µ—Å—è—Ü –±–µ—Å–ø–ª–∞—Ç–Ω–æ!")

    # –ó–∞–ø—É—Å–∫ –∞–Ω–∫–µ—Ç—ã
    await message.answer("–î–∞–≤–∞–π –∑–∞–ø–æ–ª–Ω–∏–º –∞–Ω–∫–µ—Ç—É. –í–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è:")
    await state.set_state(Questionnaire.name)


# –ê–Ω–∫–µ—Ç–∞ ‚Äî —à–∞–≥–∏

@router.message(Questionnaire.name)
async def process_name(message: Message, state: FSMContext):
    await db.update_user_data(message.from_user.id, "name", message.text)
    await message.answer("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
    await state.set_state(Questionnaire.age)


@router.message(Questionnaire.age)
async def process_age(message: Message, state: FSMContext):
    await db.update_user_data(message.from_user.id, "age", message.text)
    await message.answer("–ö–∞–∫–æ–π —É —Ç–µ–±—è –≤–µ—Å (–≤ –∫–≥)?")
    await state.set_state(Questionnaire.weight)


@router.message(Questionnaire.weight)
async def process_weight(message: Message, state: FSMContext):
    await db.update_user_data(message.from_user.id, "weight", message.text)
    await message.answer("–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è –ø–æ –∑–¥–æ—Ä–æ–≤—å—é?")
    await state.set_state(Questionnaire.health_issues)


@router.message(Questionnaire.health_issues)
async def process_health_issues(message: Message, state: FSMContext):
    await db.update_user_data(message.from_user.id, "health_issues", message.text)
    await message.answer("–ö–∞–∫–∞—è —É —Ç–µ–±—è —Ü–µ–ª—å? (–ü–æ—Ö—É–¥–µ—Ç—å / –ù–∞–±—Ä–∞—Ç—å –º–∞—Å—Å—É / –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ñ–æ—Ä–º—É / –î—Ä—É–≥–æ–µ)")
    await state.set_state(Questionnaire.goal)


@router.message(Questionnaire.goal)
async def process_goal(message: Message, state: FSMContext):
    await db.update_user_data(message.from_user.id, "goal", message.text)
    await message.answer("–°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é —Ç—ã –ø–ª–∞–Ω–∏—Ä—É–µ—à—å –ø–æ—Å–µ—â–∞—Ç—å —Å–ø–æ—Ä—Ç–∑–∞–ª?")
    await state.set_state(Questionnaire.gym_visits)


@router.message(Questionnaire.gym_visits)
async def process_gym_visits(message: Message, state: FSMContext):
    await db.update_user_data(message.from_user.id, "gym_visits", message.text)
    await message.answer("–°–ø–∞—Å–∏–±–æ! –ê–Ω–∫–µ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ ‚úÖ\n–°–∫–æ—Ä–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ üí™")
    await state.clear()
